version: '3.8'

services:
  vllm-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vllm-server
    ports:
      - "8001:8001"
    environment:
      - CUDA_VISIBLE_DEVICES=0  # Specify which GPU to use
      - HF_TOKEN=${HF_TOKEN}  # Hugging Face token for private models
      - VLLM_CACHE_DIR=/app/lora_cache
      - HF_HOME=/app/models/.cache
    volumes:
      - ./models:/app/models  # Mount local models directory
      - ./lora_cache:/app/lora_cache  # Mount LoRA cache
      - ./logs:/app/logs  # Mount logs directory
      - ./config:/app/config  # Mount configuration files
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: vllm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: vllm-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped

volumes:
  redis_data:
  prometheus_data:

networks:
  default:
    name: vllm-network